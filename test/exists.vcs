Catalyst rexported (built Sun Mar 23 23:37:30 EDT 2014 on tycon.netgear.com)
  created this file on Wed Mar 26 15:18:50 2014.
Do not edit this file.
Flag settings: 
   align: 4
   atMLtons: ()
   chunk: coalesce 4096
   closureConvertGlobalize: true
   closureConvertShrink: true
   codegen: x86
   contifyIntoMain: false
   debug: false
   defaultChar: char8
   defaultWideChar: widechar32
   defaultInt: int32
   defaultReal: real64
   defaultWord: word32
   diag passes: []
   drop passes: []
   elaborate allowConstant (default): false
   elaborate allowConstant (enabled): true
   elaborate allowFFI (default): false
   elaborate allowFFI (enabled): true
   elaborate allowPrim (default): false
   elaborate allowPrim (enabled): true
   elaborate allowOverload (default): false
   elaborate allowOverload (enabled): true
   elaborate allowRebindEquals (default): false
   elaborate allowRebindEquals (enabled): true
   elaborate deadCode (default): false
   elaborate deadCode (enabled): true
   elaborate forceUsed (default): false
   elaborate forceUsed (enabled): true
   elaborate ffiStr (default): 
   elaborate ffiStr (enabled): true
   elaborate nonexhaustiveExnMatch (default): default
   elaborate nonexhaustiveExnMatch (enabled): true
   elaborate nonexhaustiveMatch (default): warn
   elaborate nonexhaustiveMatch (enabled): true
   elaborate redundantMatch (default): warn
   elaborate redundantMatch (enabled): true
   elaborate resolveScope (default): strdec
   elaborate resolveScope (enabled): true
   elaborate sequenceNonUnit (default): ignore
   elaborate sequenceNonUnit (enabled): true
   elaborate warnUnused (default): false
   elaborate warnUnused (enabled): true
   elaborate only: false
   emit main: true
   export header: None
   exn history: false
   generated output format: executable
   gc check: Limit
   indentation: 3
   inlineIntoMain: true
   inlineLeafA: {loops = true, repeat = true, size = Some 20}
   inlineLeafB: {loops = true, repeat = true, size = Some 40}
   inlineNonRec: {small = 60, product = 320}
   input file: exists.vcs
   spec file: test/exists.spec
   keep CoreML: true
   keep Env: false
   keep def use: true
   keep dot: false
   keep Machine: false
   keep passes: []
   keep RSSA: false
   keep SSA: false
   keep SSA2: false
   keep SXML: false
   keep XML: false
   extra_: false
   lib dir: /Users/gowtham/git/mlton/newexecs/usr/local/lib/mlton
   lib target dir: /Users/gowtham/git/mlton/newexecs/usr/local/lib/mlton/targets/self
   loop passes: 1
   mark cards: true
   max function size: 10000
   mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}]
   native commented: 0
   native live stack: false
   native optimize: 1
   native move hoist: true
   native copy prop: true
   native copy prop cutoff: 1000
   native cutoff: 100
   native live transfer: 8
   native shuffle: true
   native ieee fp: false
   native split: Some 20000
   optimizationPasses: []
   polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300}
   prefer abs paths: false
   prof passes: []
   profile: None
   profile branch: false
   profile C: []
   profile IL: ProfileSource
   profile include/exclude: []
   profile raise: false
   profile stack: false
   profile val: false
   show basis: None
   show def-use: None
   show types: true
   target: self
   target arch: X86
   target OS: Linux
   type check: false
   verbosity: Pass
   warn unrecognized annotation: true
   warn deprecated features: true
   zone cut depth: 100
Elaborated VarEnv:

:: :-> ('a_2)(). (). v_8:(1:{v_9:'a_2 | true}, 2:{v_10: 'a_2 list | true})
		      -> {v_11: 'a_2 list | true
					    /\ (Rmem ('a_2))(v_11) = ({(v_8.1)} U ((Rmem ('a_2))(v_8.2) U {()}))
					    /\ (Rhd ('a_2))(v_11) = {(v_8.1)}}
exists :-> ('a_4258)('t3). (R1 :: 'a_4258 :-> {['t3]}). l:{v_0: 'a_4258 list | true}
							 -> (sp_0:x:{v_1:'a_4258 | true}
								   -> {v: bool | v = true
										  <=> not ((R1)(x) = {()})})
							     -> {v: bool | v = true
									    <=> not ((Rmem ('a_4258) ({['t3]}) ((R1)))(l) = {()})}
nil :-> ('a_2)(). (). {v_3: 'a_2 list | true
					/\ (Rmem ('a_2))(v_3) = {()}
					/\ (Rhd ('a_2))(v_3) = {()}}
false :-> ()(). (). {v_2: bool | v_2 = false}
true :-> ()(). (). {v_2: bool | v_2 = true}
Verification Conditions:

bindings(v :  bool,
	 x : 'a_4258,
	 sv_4103 :  'a_4258 list,
	 xs :  'a_4258 list,
	 x : 'a_4258,
	 l :  'a_4258 list,
	 anc_0 :  'a_4258 list,
	 x_0 :  'a_4258 list)
	R1 :-> {typescheme = (). (). 'a_4258 :-> {['t3]}, def = -- NA --}
in
      (Rmem ('a_4258))(l) = ({(x)} U ((Rmem ('a_4258))(xs) U {()}))
      (Rhd ('a_4258))(l) = {(x)}
      l = x_0
      l = anc_0
      anc_0 = x_0
      v = true <=> NOT [(R1)(x) = {()}]
   =>
      v = true <=> NOT [(R1)(x) = {()}]
end
bindings(v :  bool,
	 x_0 :  'a_4258 list,
	 anc_0 :  'a_4258 list,
	 l :  'a_4258 list,
	 sv_4100 :  'a_4258 list)
	R1 :-> {typescheme = (). (). 'a_4258 :-> {['t3]}, def = -- NA --}
in
      anc_0 = x_0
      l = x_0
      l = anc_0
      (Rmem ('a_4258))(l) = {()}
      (Rhd ('a_4258))(l) = {()}
      v = false
      v = false
   =>
      v = true <=> NOT [(Rmem ('a_4258) ({['t3]}) ((R1)))(x_0) = {()}]
end
bindings(v :  bool,
	 x_0 :  'a_4258 list,
	 anc_0 :  'a_4258 list,
	 l :  'a_4258 list,
	 x : 'a_4258,
	 xs :  'a_4258 list,
	 sv_4103 :  'a_4258 list,
	 v1 :  bool,
	 v2 :  bool,
	 v3 :  bool,
	 sv_4107 :  bool,
	 sv_4107 :  bool)
	R1 :-> {typescheme = (). (). 'a_4258 :-> {['t3]}, def = -- NA --}
in
      anc_0 = x_0
      l = x_0
      l = anc_0
      (Rmem ('a_4258))(l) = ({(x)} U ((Rmem ('a_4258))(xs) U {()}))
      (Rhd ('a_4258))(l) = {(x)}
      v1 = true
      v3 = true
      v3 = true
      v2 = true <=> NOT [(R1)(x) = {()}]
      v1 = true <=> NOT [(Rmem ('a_4258) ({['t3]}) ((R1)))(xs) = {()}]
      v1 = true
      v = true
      v = true
      v = v3
   =>
      v = true <=> NOT [(Rmem ('a_4258) ({['t3]}) ((R1)))(x_0) = {()}]
end
bindings(v :  bool,
	 x_0 :  'a_4258 list,
	 anc_0 :  'a_4258 list,
	 l :  'a_4258 list,
	 x : 'a_4258,
	 xs :  'a_4258 list,
	 sv_4103 :  'a_4258 list,
	 v1 :  bool,
	 v2 :  bool,
	 v3 :  bool,
	 sv_4107 :  bool,
	 sv_4110 :  bool)
	R1 :-> {typescheme = (). (). 'a_4258 :-> {['t3]}, def = -- NA --}
in
      anc_0 = x_0
      l = x_0
      l = anc_0
      (Rmem ('a_4258))(l) = ({(x)} U ((Rmem ('a_4258))(xs) U {()}))
      (Rhd ('a_4258))(l) = {(x)}
      v1 = true
      v3 = true
      v3 = true
      v2 = true <=> NOT [(R1)(x) = {()}]
      v1 = true <=> NOT [(Rmem ('a_4258) ({['t3]}) ((R1)))(xs) = {()}]
      v1 = false
      v = true <=> NOT [(R1)(x) = {()}]
      v = v2
      v = v3
   =>
      v = true <=> NOT [(Rmem ('a_4258) ({['t3]}) ((R1)))(x_0) = {()}]
end
bindings(v :  bool,
	 x_0 :  'a_4258 list,
	 anc_0 :  'a_4258 list,
	 l :  'a_4258 list,
	 x : 'a_4258,
	 xs :  'a_4258 list,
	 sv_4103 :  'a_4258 list,
	 v1 :  bool,
	 v2 :  bool,
	 v3 :  bool,
	 sv_4110 :  bool,
	 sv_4107 :  bool)
	R1 :-> {typescheme = (). (). 'a_4258 :-> {['t3]}, def = -- NA --}
in
      anc_0 = x_0
      l = x_0
      l = anc_0
      (Rmem ('a_4258))(l) = ({(x)} U ((Rmem ('a_4258))(xs) U {()}))
      (Rhd ('a_4258))(l) = {(x)}
      v1 = false
      v3 = true <=> NOT [(R1)(x) = {()}]
      v3 = v2
      v2 = true <=> NOT [(R1)(x) = {()}]
      v1 = true <=> NOT [(Rmem ('a_4258) ({['t3]}) ((R1)))(xs) = {()}]
      v1 = true
      v = true
      v = true
      v = v3
   =>
      v = true <=> NOT [(Rmem ('a_4258) ({['t3]}) ((R1)))(x_0) = {()}]
end
bindings(v :  bool,
	 x_0 :  'a_4258 list,
	 anc_0 :  'a_4258 list,
	 l :  'a_4258 list,
	 x : 'a_4258,
	 xs :  'a_4258 list,
	 sv_4103 :  'a_4258 list,
	 v1 :  bool,
	 v2 :  bool,
	 v3 :  bool,
	 sv_4110 :  bool,
	 sv_4110 :  bool)
	R1 :-> {typescheme = (). (). 'a_4258 :-> {['t3]}, def = -- NA --}
in
      anc_0 = x_0
      l = x_0
      l = anc_0
      (Rmem ('a_4258))(l) = ({(x)} U ((Rmem ('a_4258))(xs) U {()}))
      (Rhd ('a_4258))(l) = {(x)}
      v1 = false
      v3 = true <=> NOT [(R1)(x) = {()}]
      v3 = v2
      v2 = true <=> NOT [(R1)(x) = {()}]
      v1 = true <=> NOT [(Rmem ('a_4258) ({['t3]}) ((R1)))(xs) = {()}]
      v1 = false
      v = true <=> NOT [(R1)(x) = {()}]
      v = v2
      v = v3
   =>
      v = true <=> NOT [(Rmem ('a_4258) ({['t3]}) ((R1)))(x_0) = {()}]
end
