Catalyst rexported (built Sun Mar 23 23:37:30 EDT 2014 on tycon.netgear.com)
  created this file on Wed Mar 26 15:25:39 2014.
Do not edit this file.
Flag settings: 
   align: 4
   atMLtons: ()
   chunk: coalesce 4096
   closureConvertGlobalize: true
   closureConvertShrink: true
   codegen: x86
   contifyIntoMain: false
   debug: false
   defaultChar: char8
   defaultWideChar: widechar32
   defaultInt: int32
   defaultReal: real64
   defaultWord: word32
   diag passes: []
   drop passes: []
   elaborate allowConstant (default): false
   elaborate allowConstant (enabled): true
   elaborate allowFFI (default): false
   elaborate allowFFI (enabled): true
   elaborate allowPrim (default): false
   elaborate allowPrim (enabled): true
   elaborate allowOverload (default): false
   elaborate allowOverload (enabled): true
   elaborate allowRebindEquals (default): false
   elaborate allowRebindEquals (enabled): true
   elaborate deadCode (default): false
   elaborate deadCode (enabled): true
   elaborate forceUsed (default): false
   elaborate forceUsed (enabled): true
   elaborate ffiStr (default): 
   elaborate ffiStr (enabled): true
   elaborate nonexhaustiveExnMatch (default): default
   elaborate nonexhaustiveExnMatch (enabled): true
   elaborate nonexhaustiveMatch (default): warn
   elaborate nonexhaustiveMatch (enabled): true
   elaborate redundantMatch (default): warn
   elaborate redundantMatch (enabled): true
   elaborate resolveScope (default): strdec
   elaborate resolveScope (enabled): true
   elaborate sequenceNonUnit (default): ignore
   elaborate sequenceNonUnit (enabled): true
   elaborate warnUnused (default): false
   elaborate warnUnused (enabled): true
   elaborate only: false
   emit main: true
   export header: None
   exn history: false
   generated output format: executable
   gc check: Limit
   indentation: 3
   inlineIntoMain: true
   inlineLeafA: {loops = true, repeat = true, size = Some 20}
   inlineLeafB: {loops = true, repeat = true, size = Some 40}
   inlineNonRec: {small = 60, product = 320}
   input file: zip.evcs
   spec file: test/zip.spec
   keep CoreML: true
   keep Env: false
   keep def use: true
   keep dot: false
   keep Machine: false
   keep passes: []
   keep RSSA: false
   keep SSA: false
   keep SSA2: false
   keep SXML: false
   keep XML: false
   extra_: false
   lib dir: /Users/gowtham/git/mlton/newexecs/usr/local/lib/mlton
   lib target dir: /Users/gowtham/git/mlton/newexecs/usr/local/lib/mlton/targets/self
   loop passes: 1
   mark cards: true
   max function size: 10000
   mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}]
   native commented: 0
   native live stack: false
   native optimize: 1
   native move hoist: true
   native copy prop: true
   native copy prop cutoff: 1000
   native cutoff: 100
   native live transfer: 8
   native shuffle: true
   native ieee fp: false
   native split: Some 20000
   optimizationPasses: []
   polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300}
   prefer abs paths: false
   prof passes: []
   profile: None
   profile branch: false
   profile C: []
   profile IL: ProfileSource
   profile include/exclude: []
   profile raise: false
   profile stack: false
   profile val: false
   show basis: None
   show def-use: None
   show types: true
   target: self
   target arch: X86
   target OS: Linux
   type check: false
   verbosity: Pass
   warn unrecognized annotation: true
   warn deprecated features: true
   zone cut depth: 100
Verification Conditions:

bindings(v_3 :   ('a_4259, 'a_4258) pair list,
	 x_1 :  'a_4258 list,
	 x_0 :  'a_4259 list,
	 anc_0 :  'a_4259 list,
	 anc_1 :  'a_4258 list,
	 l1 :  'a_4259 list,
	 l2 :  'a_4258 list,
	 anc_2 :  'a_4259 list,
	 anc_3 :  'a_4258 list,
	 anc_7 :  'a_4259 list,
	 anc_6 :  'a_4258 list,
	 x1 : 'a_4259,
	 xs1 :  'a_4259 list,
	 sv_4108 :  'a_4259 list,
	 x2 : 'a_4258,
	 xs2 :  'a_4258 list,
	 sv_4110 :  'a_4258 list,
	 anc_10 : 'a_4259,
	 anc_11 : 'a_4258,
	 anc_12 :  ('a_4259, 'a_4258) pair,
	 anc_15 :   ('a_4259, 'a_4258) pair list,
	 Rhd16 : ({(1 :   ('a_4259, 'a_4258) pair list, 2 :  ('a_4259, 'a_4258) pair)}) -> ( bool),
	 Rob15 : ({(1 :   ('a_4259, 'a_4258) pair list, 2 :  ('a_4259, 'a_4258) pair, 3 :  ('a_4259, 'a_4258) pair)}) -> ( bool),
	 Rmem14 : ({(1 :   ('a_4259, 'a_4258) pair list, 2 :  ('a_4259, 'a_4258) pair)}) -> ( bool),
	 Robs13 : ({(1 :   ('a_4259, 'a_4258) pair list, 2 :  ('a_4259, 'a_4258) pair, 3 :  ('a_4259, 'a_4258) pair)}) -> ( bool),
	 Rhd12 : ({(1 :  'a_4259 list, 2 : 'a_4259)}) -> ( bool),
	 Rob11 : ({(1 :  'a_4259 list, 2 : 'a_4259, 3 : 'a_4259)}) -> ( bool),
	 Rmem10 : ({(1 :  'a_4259 list, 2 : 'a_4259)}) -> ( bool),
	 Robs9 : ({(1 :  'a_4259 list, 2 : 'a_4259, 3 : 'a_4259)}) -> ( bool),
	 Rhd8 : ({(1 :  'a_4258 list, 2 : 'a_4258)}) -> ( bool),
	 Rob7 : ({(1 :  'a_4258 list, 2 : 'a_4258, 3 : 'a_4258)}) -> ( bool),
	 Rmem6 : ({(1 :  'a_4258 list, 2 : 'a_4258)}) -> ( bool),
	 Robs5 : ({(1 :  'a_4258 list, 2 : 'a_4258, 3 : 'a_4258)}) -> ( bool),
	 Rsnd4 : ({(1 :  ('a_4259, 'a_4258) pair, 2 : 'a_4258)}) -> ( bool),
	 Rmem3 : ({(1 :  'a_4259 list, 2 : 'a_4259)}) -> ( bool),
	 RId2 : ({(1 : 'a_4259, 2 : 'a_4259)}) -> ( bool),
	 Rmem1 : ({(1 :   ('a_4259, 'a_4258) pair list, 2 : 'a_4259)}) -> ( bool),
	 Rfst0 : ({(1 :  ('a_4259, 'a_4258) pair, 2 : 'a_4259)}) -> ( bool))
	Rmem1 :-> {typescheme = (). ().   ('a_4259, 'a_4258) pair list :-> {['a_4259]}, def = \v_3. bind (Rmem14 () (v_3),\(v_2). (Rfst0)(v_2))}
	RId2 :-> {typescheme = (). (). 'a_4259 :-> {['a_4259]}, def = \pv_0.{(pv_0)}}
	Rmem3 :-> {typescheme = (). ().  'a_4259 list :-> {['a_4259]}, def = \v_3. bind (Rmem10 () (v_3),\(v_2). (RId2)(v_2))}
in
      anc_1 = x_1
      anc_0 = x_0
      l2 = x_1
      l2 = anc_1
      l1 = x_0
      l1 = anc_0
      anc_3 = x_1
      anc_3 = anc_1
      anc_3 = l2
      anc_2 = x_0
      anc_2 = anc_0
      anc_2 = l1
      anc_6 = x_1
      anc_6 = anc_1
      anc_6 = l2
      anc_6 = anc_3
      anc_7 = x_0
      anc_7 = anc_0
      anc_7 = l1
      anc_7 = anc_2
      (Rmem1)(anc_15) = (Rmem3)(xs1)
      (Rsnd4)(anc_12) = {(anc_11)}
      (Rfst0)(anc_12) = {(anc_10)}
      anc_11 = x2
      anc_10 = x1
      (Robs5)(anc_6) = (({(x2)} X (Rmem6)(xs2)) U ((Robs5)(xs2) U {()}))
      (Rob7)(anc_6) = ({(x2)} X (Rmem6)(xs2))
      (Rmem6)(anc_6) = ({(x2)} U ((Rmem6)(xs2) U {()}))
      (Rhd8)(anc_6) = {(x2)}
      (Robs9)(anc_7) = (({(x1)} X (Rmem10)(xs1)) U ((Robs9)(xs1) U {()}))
      (Rob11)(anc_7) = ({(x1)} X (Rmem10)(xs1))
      (Rmem10)(anc_7) = ({(x1)} U ((Rmem10)(xs1) U {()}))
      (Rhd12)(anc_7) = {(x1)}
      (Robs13)(v_3) = (({(anc_12)} X (Rmem14)(anc_15)) U ((Robs13)(anc_15) U {()}))
      (Rob15)(v_3) = ({(anc_12)} X (Rmem14)(anc_15))
      (Rmem14)(v_3) = ({(anc_12)} U ((Rmem14)(anc_15) U {()}))
      (Rhd16)(v_3) = {(anc_12)}
   =>
      (Rmem1)(v_3) = (Rmem3)(x_0)
end
bindings(v_3 :   ('a_4259, 'a_4258) pair list,
	 x_1 :  'a_4258 list,
	 x_0 :  'a_4259 list,
	 anc_0 :  'a_4259 list,
	 anc_1 :  'a_4258 list,
	 l1 :  'a_4259 list,
	 l2 :  'a_4258 list,
	 anc_2 :  'a_4259 list,
	 anc_3 :  'a_4258 list,
	 anc_5 :  'a_4259 list,
	 anc_4 :  'a_4258 list,
	 sv_4102 :  'a_4259 list,
	 sv_4104 :  'a_4258 list,
	 Rmem15 : ({(1 :  'a_4259 list, 2 : 'a_4259)}) -> ( bool),
	 RId14 : ({(1 : 'a_4259, 2 : 'a_4259)}) -> ( bool),
	 Rmem13 : ({(1 :   ('a_4259, 'a_4258) pair list, 2 : 'a_4259)}) -> ( bool),
	 Rfst12 : ({(1 :  ('a_4259, 'a_4258) pair, 2 : 'a_4259)}) -> ( bool),
	 Rhd11 : ({(1 :   ('a_4259, 'a_4258) pair list, 2 :  ('a_4259, 'a_4258) pair)}) -> ( bool),
	 Rmem10 : ({(1 :   ('a_4259, 'a_4258) pair list, 2 :  ('a_4259, 'a_4258) pair)}) -> ( bool),
	 Rob9 : ({(1 :   ('a_4259, 'a_4258) pair list, 2 :  ('a_4259, 'a_4258) pair, 3 :  ('a_4259, 'a_4258) pair)}) -> ( bool),
	 Robs8 : ({(1 :   ('a_4259, 'a_4258) pair list, 2 :  ('a_4259, 'a_4258) pair, 3 :  ('a_4259, 'a_4258) pair)}) -> ( bool),
	 Rhd7 : ({(1 :  'a_4259 list, 2 : 'a_4259)}) -> ( bool),
	 Rmem6 : ({(1 :  'a_4259 list, 2 : 'a_4259)}) -> ( bool),
	 Rob5 : ({(1 :  'a_4259 list, 2 : 'a_4259, 3 : 'a_4259)}) -> ( bool),
	 Robs4 : ({(1 :  'a_4259 list, 2 : 'a_4259, 3 : 'a_4259)}) -> ( bool),
	 Rhd3 : ({(1 :  'a_4258 list, 2 : 'a_4258)}) -> ( bool),
	 Rmem2 : ({(1 :  'a_4258 list, 2 : 'a_4258)}) -> ( bool),
	 Rob1 : ({(1 :  'a_4258 list, 2 : 'a_4258, 3 : 'a_4258)}) -> ( bool),
	 Robs0 : ({(1 :  'a_4258 list, 2 : 'a_4258, 3 : 'a_4258)}) -> ( bool))
	Rmem13 :-> {typescheme = (). ().   ('a_4259, 'a_4258) pair list :-> {['a_4259]}, def = \v_3. bind (Rmem10 () (v_3),\(v_2). (Rfst12)(v_2))}
	RId14 :-> {typescheme = (). (). 'a_4259 :-> {['a_4259]}, def = \pv_0.{(pv_0)}}
	Rmem15 :-> {typescheme = (). ().  'a_4259 list :-> {['a_4259]}, def = \v_3. bind (Rmem6 () (v_3),\(v_2). (RId14)(v_2))}
in
      anc_1 = x_1
      anc_0 = x_0
      l2 = x_1
      l2 = anc_1
      l1 = x_0
      l1 = anc_0
      anc_3 = x_1
      anc_3 = anc_1
      anc_3 = l2
      anc_2 = x_0
      anc_2 = anc_0
      anc_2 = l1
      anc_4 = x_1
      anc_4 = anc_1
      anc_4 = l2
      anc_4 = anc_3
      anc_5 = x_0
      anc_5 = anc_0
      anc_5 = l1
      anc_5 = anc_2
      (Robs0)(anc_4) = {()}
      (Rob1)(anc_4) = {()}
      (Rmem2)(anc_4) = {()}
      (Rhd3)(anc_4) = {()}
      (Robs4)(anc_5) = {()}
      (Rob5)(anc_5) = {()}
      (Rmem6)(anc_5) = {()}
      (Rhd7)(anc_5) = {()}
      (Robs8)(v_3) = {()}
      (Rob9)(v_3) = {()}
      (Rmem10)(v_3) = {()}
      (Rhd11)(v_3) = {()}
   =>
      (Rmem13)(v_3) = (Rmem15)(x_0)
end
