Catalyst rexported (built Mon Nov 18 13:24:17 EST 2013 on pal-nat184-206-107.itap.purdue.edu)
  created this file on Mon Nov 18 16:02:29 2013.
Do not edit this file.
Flag settings: 
   align: 4
   atMLtons: ()
   chunk: coalesce 4096
   closureConvertGlobalize: true
   closureConvertShrink: true
   codegen: x86
   contifyIntoMain: false
   debug: false
   defaultChar: char8
   defaultWideChar: widechar32
   defaultInt: int32
   defaultReal: real64
   defaultWord: word32
   diag passes: []
   drop passes: []
   elaborate allowConstant (default): false
   elaborate allowConstant (enabled): true
   elaborate allowFFI (default): false
   elaborate allowFFI (enabled): true
   elaborate allowPrim (default): false
   elaborate allowPrim (enabled): true
   elaborate allowOverload (default): false
   elaborate allowOverload (enabled): true
   elaborate allowRebindEquals (default): false
   elaborate allowRebindEquals (enabled): true
   elaborate deadCode (default): false
   elaborate deadCode (enabled): true
   elaborate forceUsed (default): false
   elaborate forceUsed (enabled): true
   elaborate ffiStr (default): 
   elaborate ffiStr (enabled): true
   elaborate nonexhaustiveExnMatch (default): default
   elaborate nonexhaustiveExnMatch (enabled): true
   elaborate nonexhaustiveMatch (default): warn
   elaborate nonexhaustiveMatch (enabled): true
   elaborate redundantMatch (default): warn
   elaborate redundantMatch (enabled): true
   elaborate resolveScope (default): strdec
   elaborate resolveScope (enabled): true
   elaborate sequenceNonUnit (default): ignore
   elaborate sequenceNonUnit (enabled): true
   elaborate warnUnused (default): false
   elaborate warnUnused (enabled): true
   elaborate only: false
   emit main: true
   export header: None
   exn history: false
   generated output format: executable
   gc check: Limit
   indentation: 3
   inlineIntoMain: true
   inlineLeafA: {loops = true, repeat = true, size = Some 20}
   inlineLeafB: {loops = true, repeat = true, size = Some 40}
   inlineNonRec: {small = 60, product = 320}
   input file: binarytree.core-ml
   spec file: test/binarytree.spec
   keep CoreML: true
   keep Env: false
   keep def use: true
   keep dot: false
   keep Machine: false
   keep passes: []
   keep RSSA: false
   keep SSA: false
   keep SSA2: false
   keep SXML: false
   keep XML: false
   extra_: false
   lib dir: /Users/gowtham/git/mlton/newexecs/usr/local/lib/mlton
   lib target dir: /Users/gowtham/git/mlton/newexecs/usr/local/lib/mlton/targets/self
   loop passes: 1
   mark cards: true
   max function size: 10000
   mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}]
   native commented: 0
   native live stack: false
   native optimize: 1
   native move hoist: true
   native copy prop: true
   native copy prop cutoff: 1000
   native cutoff: 100
   native live transfer: 8
   native shuffle: true
   native ieee fp: false
   native split: Some 20000
   optimizationPasses: []
   polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300}
   prefer abs paths: false
   prof passes: []
   profile: None
   profile branch: false
   profile C: []
   profile IL: ProfileSource
   profile include/exclude: []
   profile raise: false
   profile stack: false
   profile val: false
   show basis: None
   show def-use: None
   show types: true
   target: self
   target arch: X86
   target OS: Linux
   type check: false
   verbosity: Pass
   warn unrecognized annotation: true
   warn deprecated features: true
   zone cut depth: 100


Decs:
datatype 'a_2 list = nil
		     | :: of 'a_2 * 'a_2 list
		     | cons of 'a_2 * 'a_2 list
datatype 'a tree = Leaf of 'a
		   | Node of 'a tree * 'a * 'a tree
val rec 'a_4258
   concat: 'a_4258 list -> 'a_4258 list -> 'a_4258 list = 
      (fn x_0: 'a_4258 list =>
       (fn x_1: 'a_4258 list =>
	case (x_0, x_1) of
	  (l1: 'a_4258 list, l2: 'a_4258 list) =>
	  case l1 of
	    [] => l2
	  | ::['a_4258] (x: 'a_4258, xs: 'a_4258 list) =>
	    (::['a_4258] (x, ((concat ('a_4258) xs) l2)))))
val rec 'a_4259
   preOrder: 'a_4259 tree -> 'a_4259 list = 
      (fn x_2: 'a_4259 tree =>
       case x_2 of
	 (t: 'a_4259 tree) =>
	 case t of
	   Leaf['a_4259] x: 'a_4259 => [x]
	 | Node['a_4259] (l: 'a_4259 tree, x: 'a_4259, r: 'a_4259 tree) =>
	   ((concat ('a_4259) ((concat ('a_4259) (preOrder ('a_4259) l)) [x])) (preOrder ('a_4259) r)))
val rec 'a_4260
   postOrder: 'a_4260 tree -> 'a_4260 list = 
      (fn x_3: 'a_4260 tree =>
       case x_3 of
	 (t: 'a_4260 tree) =>
	 case t of
	   Leaf['a_4260] x: 'a_4260 => [x]
	 | Node['a_4260] (l: 'a_4260 tree, x: 'a_4260, r: 'a_4260 tree) =>
	   ((concat ('a_4260) ((concat ('a_4260) (postOrder ('a_4260) l)) (postOrder ('a_4260) r))) [x]))
