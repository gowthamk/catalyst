(declare-const v Bool)
(declare-sort T0)
(declare-const x T0)
(declare-sort T1)
(declare-const sv_4103 T1)
(declare-const xs T1)
(declare-const x T0)
(declare-const l T1)
(declare-const anc_0 T1)
(declare-const x_0 T1)
(declare-fun Rhd1 (T1 T0) Bool)
(declare-fun Rmem0 (T1 T0) Bool)
(declare-fun R1 (T0 T0) Bool)
(declare-fun set0 (T0) Bool)
(assert (forall ((bv0 T0)) (= (set0 bv0) (and (= bv0 x)))))
(declare-fun set1 (T0) Bool)
(assert (forall ((bv0 T0)) (= (set1 bv0) (or (set0 bv0) (Rmem0 xs bv0)))))
(assert (forall ((bv0 T0)) (= (Rmem0 l bv0) (set1 bv0))))
(declare-fun set2 (T0) Bool)
(assert (forall ((bv0 T0)) (= (set2 bv0) (and (= bv0 x)))))
(assert (forall ((bv0 T0)) (= (Rhd1 l bv0) (set2 bv0))))
(assert (= l x_0))
(assert (= l anc_0))
(assert (= anc_0 x_0))
(declare-fun set3 (T0) Bool)
(assert (forall ((bv0 T0)) (= (set3 bv0) false)))
(assert (=> (= v true) (forall ((bv0 T0)) (= (R1 x bv0) (set3 bv0)))))
(declare-fun set4 (T0) Bool)
(assert (forall ((bv0 T0)) (= (set4 bv0) (and (= bv0 x)))))
(assert (=> (= v false) (forall ((bv0 T0)) (= (R1 x bv0) (set4 bv0)))))
(declare-fun set5 (T0) Bool)
(assert (forall ((bv0 T0)) (= (set5 bv0) false)))
(assert (let ((a!1 (=> (= v true) (forall ((bv0 T0)) (= (R1 x bv0) (set5 bv0))))))
  (not a!1)))
(check-sat)

(declare-const v Bool)
(declare-sort T2)
(declare-const x T2)
(declare-sort T3)
(declare-const sv_4103 T3)
(declare-const xs T3)
(declare-const x T2)
(declare-const l T3)
(declare-const anc_0 T3)
(declare-const x_0 T3)
(declare-fun Rhd1 (T3 T2) Bool)
(declare-fun Rmem0 (T3 T2) Bool)
(declare-fun R1 (T2 T2) Bool)
(declare-fun set6 (T2) Bool)
(assert (forall ((bv0 T2)) (= (set6 bv0) (and (= bv0 x)))))
(declare-fun set7 (T2) Bool)
(assert (forall ((bv0 T2)) (= (set7 bv0) (or (set6 bv0) (Rmem0 xs bv0)))))
(assert (forall ((bv0 T2)) (= (Rmem0 l bv0) (set7 bv0))))
(declare-fun set8 (T2) Bool)
(assert (forall ((bv0 T2)) (= (set8 bv0) (and (= bv0 x)))))
(assert (forall ((bv0 T2)) (= (Rhd1 l bv0) (set8 bv0))))
(assert (= l x_0))
(assert (= l anc_0))
(assert (= anc_0 x_0))
(declare-fun set9 (T2) Bool)
(assert (forall ((bv0 T2)) (= (set9 bv0) false)))
(assert (=> (= v true) (forall ((bv0 T2)) (= (R1 x bv0) (set9 bv0)))))
(declare-fun set10 (T2) Bool)
(assert (forall ((bv0 T2)) (= (set10 bv0) (and (= bv0 x)))))
(assert (=> (= v false) (forall ((bv0 T2)) (= (R1 x bv0) (set10 bv0)))))
(declare-fun set11 (T2) Bool)
(assert (forall ((bv0 T2)) (= (set11 bv0) (and (= bv0 x)))))
(assert (let ((a!1 (=> (= v false) (forall ((bv0 T2)) (= (R1 x bv0) (set11 bv0))))))
  (not a!1)))
(check-sat)

(declare-sort T4)
(declare-const v_11 T4)
(declare-const x_0 T4)
(declare-const anc_0 T4)
(declare-const l T4)
(declare-const sv_4100 T4)
(declare-sort T5)
(declare-fun Rmem4 (T4 T5) Bool)
(declare-fun Rmem3 (T4 T5) Bool)
(declare-fun RId2 (T5 T5) Bool)
(declare-fun Rhd1 (T4 T5) Bool)
(declare-fun Rmem0 (T4 T5) Bool)
(declare-fun R1 (T5 T5) Bool)
(declare-fun set12 (T5 T5) Bool)
(assert (forall ((bv1 T5) (bv0 T5)) (= (set12 bv0 bv1) (= bv0 bv1))))
(assert (forall ((bv1 T5) (bv0 T5)) (= (RId2 bv0 bv1) (set12 bv0 bv1))))
(declare-fun set13 (T5 T5) Bool)
(assert (forall ((bv1 T5) (bv0 T5)) (= (set13 bv0 bv1) (and (RId2 bv0 bv1)))))
(declare-fun set14 (T4 T5 T5) Bool)
(assert (forall ((bv2 T5) (bv1 T5) (bv0 T4))
  (= (set14 bv0 bv1 bv2) (and (Rmem0 bv0 bv1) (set13 bv1 bv2)))))
(assert (forall ((bv2 T5) (bv1 T5) (bv0 T4)) (=> (set14 bv0 bv1 bv2) (Rmem3 bv0 bv2))))
(assert (forall ((bv2 T5) (bv1 T4))
  (exists ((ev0 T5)) (=> (Rmem3 bv1 bv2) (set14 bv1 ev0 bv2)))))
(declare-fun set15 (T5 T5) Bool)
(assert (forall ((bv1 T5) (bv0 T5)) (= (set15 bv0 bv1) (and (R1 bv0 bv1)))))
(declare-fun set16 (T4 T5 T5) Bool)
(assert (forall ((bv2 T5) (bv1 T5) (bv0 T4))
  (= (set16 bv0 bv1 bv2) (and (Rmem0 bv0 bv1) (set15 bv1 bv2)))))
(assert (forall ((bv2 T5) (bv1 T5) (bv0 T4)) (=> (set16 bv0 bv1 bv2) (Rmem4 bv0 bv2))))
(assert (forall ((bv2 T5) (bv1 T4))
  (exists ((ev0 T5)) (=> (Rmem4 bv1 bv2) (set16 bv1 ev0 bv2)))))
(assert (= anc_0 x_0))
(assert (= l x_0))
(assert (= l anc_0))
(declare-fun set17 (T5) Bool)
(assert (forall ((bv0 T5)) (= (set17 bv0) false)))
(assert (forall ((bv0 T5)) (= (Rmem0 l bv0) (set17 bv0))))
(declare-fun set18 (T5) Bool)
(assert (forall ((bv0 T5)) (= (set18 bv0) false)))
(assert (forall ((bv0 T5)) (= (Rhd1 l bv0) (set18 bv0))))
(declare-fun set19 (T5) Bool)
(assert (forall ((bv0 T5)) (= (set19 bv0) false)))
(assert (forall ((bv0 T5)) (= (Rmem0 v_11 bv0) (set19 bv0))))
(declare-fun set20 (T5) Bool)
(assert (forall ((bv0 T5)) (= (set20 bv0) false)))
(assert (forall ((bv0 T5)) (= (Rhd1 v_11 bv0) (set20 bv0))))
(assert (not (forall ((bv0 T5)) (= (Rmem3 v_11 bv0) (Rmem4 x_0 bv0)))))
(check-sat)

(declare-sort T6)
(declare-const v_11 T6)
(declare-const x_0 T6)
(declare-const anc_0 T6)
(declare-const l T6)
(declare-sort T7)
(declare-const x T7)
(declare-const xs T6)
(declare-const sv_4103 T6)
(declare-const v1 T6)
(declare-const v2 Bool)
(declare-const sv_4107 Bool)
(declare-fun Rmem4 (T6 T7) Bool)
(declare-fun Rmem3 (T6 T7) Bool)
(declare-fun RId2 (T7 T7) Bool)
(declare-fun Rhd1 (T6 T7) Bool)
(declare-fun Rmem0 (T6 T7) Bool)
(declare-fun R1 (T7 T7) Bool)
(declare-fun set21 (T7 T7) Bool)
(assert (forall ((bv1 T7) (bv0 T7)) (= (set21 bv0 bv1) (= bv0 bv1))))
(assert (forall ((bv1 T7) (bv0 T7)) (= (RId2 bv0 bv1) (set21 bv0 bv1))))
(declare-fun set22 (T7 T7) Bool)
(assert (forall ((bv1 T7) (bv0 T7)) (= (set22 bv0 bv1) (and (RId2 bv0 bv1)))))
(declare-fun set23 (T6 T7 T7) Bool)
(assert (forall ((bv2 T7) (bv1 T7) (bv0 T6))
  (= (set23 bv0 bv1 bv2) (and (Rmem0 bv0 bv1) (set22 bv1 bv2)))))
(assert (forall ((bv2 T7) (bv1 T7) (bv0 T6)) (=> (set23 bv0 bv1 bv2) (Rmem3 bv0 bv2))))
(assert (forall ((bv2 T7) (bv1 T6))
  (exists ((ev0 T7)) (=> (Rmem3 bv1 bv2) (set23 bv1 ev0 bv2)))))
(declare-fun set24 (T7 T7) Bool)
(assert (forall ((bv1 T7) (bv0 T7)) (= (set24 bv0 bv1) (and (R1 bv0 bv1)))))
(declare-fun set25 (T6 T7 T7) Bool)
(assert (forall ((bv2 T7) (bv1 T7) (bv0 T6))
  (= (set25 bv0 bv1 bv2) (and (Rmem0 bv0 bv1) (set24 bv1 bv2)))))
(assert (forall ((bv2 T7) (bv1 T7) (bv0 T6)) (=> (set25 bv0 bv1 bv2) (Rmem4 bv0 bv2))))
(assert (forall ((bv2 T7) (bv1 T6))
  (exists ((ev0 T7)) (=> (Rmem4 bv1 bv2) (set25 bv1 ev0 bv2)))))
(assert (= anc_0 x_0))
(assert (= l x_0))
(assert (= l anc_0))
(declare-fun set26 (T7) Bool)
(assert (forall ((bv0 T7)) (= (set26 bv0) (and (= bv0 x)))))
(declare-fun set27 (T7) Bool)
(assert (forall ((bv0 T7)) (= (set27 bv0) (or (set26 bv0) (Rmem0 xs bv0)))))
(assert (forall ((bv0 T7)) (= (Rmem0 l bv0) (set27 bv0))))
(declare-fun set28 (T7) Bool)
(assert (forall ((bv0 T7)) (= (set28 bv0) (and (= bv0 x)))))
(assert (forall ((bv0 T7)) (= (Rhd1 l bv0) (set28 bv0))))
(declare-fun set29 (T7) Bool)
(assert (forall ((bv0 T7)) (= (set29 bv0) false)))
(assert (=> (= v2 true) (forall ((bv0 T7)) (= (R1 x bv0) (set29 bv0)))))
(declare-fun set30 (T7) Bool)
(assert (forall ((bv0 T7)) (= (set30 bv0) (and (= bv0 x)))))
(assert (=> (= v2 false) (forall ((bv0 T7)) (= (R1 x bv0) (set30 bv0)))))
(assert (forall ((bv0 T7)) (= (Rmem3 v1 bv0) (Rmem4 xs bv0))))
(assert (= v2 true))
(assert (forall ((bv0 T7)) (= (Rmem3 v_11 bv0) (Rmem4 xs bv0))))
(assert (= v_11 v1))
(assert (not (forall ((bv0 T7)) (= (Rmem3 v_11 bv0) (Rmem4 x_0 bv0)))))
(check-sat)

(declare-sort T8)
(declare-const v_11 T8)
(declare-const x_0 T8)
(declare-const anc_0 T8)
(declare-const l T8)
(declare-sort T9)
(declare-const x T9)
(declare-const xs T8)
(declare-const sv_4103 T8)
(declare-const v1 T8)
(declare-const v2 Bool)
(declare-const sv_4110 Bool)
(declare-const anc_3 T9)
(declare-const anc_4 T8)
(declare-fun Rmem4 (T8 T9) Bool)
(declare-fun Rmem3 (T8 T9) Bool)
(declare-fun RId2 (T9 T9) Bool)
(declare-fun Rhd1 (T8 T9) Bool)
(declare-fun Rmem0 (T8 T9) Bool)
(declare-fun R1 (T9 T9) Bool)
(declare-fun set31 (T9 T9) Bool)
(assert (forall ((bv1 T9) (bv0 T9)) (= (set31 bv0 bv1) (= bv0 bv1))))
(assert (forall ((bv1 T9) (bv0 T9)) (= (RId2 bv0 bv1) (set31 bv0 bv1))))
(declare-fun set32 (T9 T9) Bool)
(assert (forall ((bv1 T9) (bv0 T9)) (= (set32 bv0 bv1) (and (RId2 bv0 bv1)))))
(declare-fun set33 (T8 T9 T9) Bool)
(assert (forall ((bv2 T9) (bv1 T9) (bv0 T8))
  (= (set33 bv0 bv1 bv2) (and (Rmem0 bv0 bv1) (set32 bv1 bv2)))))
(assert (forall ((bv2 T9) (bv1 T9) (bv0 T8)) (=> (set33 bv0 bv1 bv2) (Rmem3 bv0 bv2))))
(assert (forall ((bv2 T9) (bv1 T8))
  (exists ((ev0 T9)) (=> (Rmem3 bv1 bv2) (set33 bv1 ev0 bv2)))))
(declare-fun set34 (T9 T9) Bool)
(assert (forall ((bv1 T9) (bv0 T9)) (= (set34 bv0 bv1) (and (R1 bv0 bv1)))))
(declare-fun set35 (T8 T9 T9) Bool)
(assert (forall ((bv2 T9) (bv1 T9) (bv0 T8))
  (= (set35 bv0 bv1 bv2) (and (Rmem0 bv0 bv1) (set34 bv1 bv2)))))
(assert (forall ((bv2 T9) (bv1 T9) (bv0 T8)) (=> (set35 bv0 bv1 bv2) (Rmem4 bv0 bv2))))
(assert (forall ((bv2 T9) (bv1 T8))
  (exists ((ev0 T9)) (=> (Rmem4 bv1 bv2) (set35 bv1 ev0 bv2)))))
(assert (= anc_0 x_0))
(assert (= l x_0))
(assert (= l anc_0))
(declare-fun set36 (T9) Bool)
(assert (forall ((bv0 T9)) (= (set36 bv0) (and (= bv0 x)))))
(declare-fun set37 (T9) Bool)
(assert (forall ((bv0 T9)) (= (set37 bv0) (or (set36 bv0) (Rmem0 xs bv0)))))
(assert (forall ((bv0 T9)) (= (Rmem0 l bv0) (set37 bv0))))
(declare-fun set38 (T9) Bool)
(assert (forall ((bv0 T9)) (= (set38 bv0) (and (= bv0 x)))))
(assert (forall ((bv0 T9)) (= (Rhd1 l bv0) (set38 bv0))))
(declare-fun set39 (T9) Bool)
(assert (forall ((bv0 T9)) (= (set39 bv0) false)))
(assert (=> (= v2 true) (forall ((bv0 T9)) (= (R1 x bv0) (set39 bv0)))))
(declare-fun set40 (T9) Bool)
(assert (forall ((bv0 T9)) (= (set40 bv0) (and (= bv0 x)))))
(assert (=> (= v2 false) (forall ((bv0 T9)) (= (R1 x bv0) (set40 bv0)))))
(assert (forall ((bv0 T9)) (= (Rmem3 v1 bv0) (Rmem4 xs bv0))))
(assert (= v2 false))
(assert (forall ((bv0 T9)) (= (Rmem3 anc_4 bv0) (Rmem4 xs bv0))))
(assert (= anc_4 v1))
(assert (= anc_3 x))
(declare-fun set41 (T9) Bool)
(assert (forall ((bv0 T9)) (= (set41 bv0) (and (= bv0 anc_3)))))
(declare-fun set42 (T9) Bool)
(assert (forall ((bv0 T9)) (= (set42 bv0) (or (set41 bv0) (Rmem0 anc_4 bv0)))))
(assert (forall ((bv0 T9)) (= (Rmem0 v_11 bv0) (set42 bv0))))
(declare-fun set43 (T9) Bool)
(assert (forall ((bv0 T9)) (= (set43 bv0) (and (= bv0 anc_3)))))
(assert (forall ((bv0 T9)) (= (Rhd1 v_11 bv0) (set43 bv0))))
(assert (not (forall ((bv0 T9)) (= (Rmem3 v_11 bv0) (Rmem4 x_0 bv0)))))
(check-sat)

